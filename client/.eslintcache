[{"D:\\TodoApp\\client\\src\\index.js":"1","D:\\TodoApp\\client\\src\\App.js":"2","D:\\TodoApp\\client\\src\\reportWebVitals.js":"3","D:\\TodoApp\\client\\src\\screens\\Register.js":"4","D:\\TodoApp\\client\\src\\screens\\Home.js":"5","D:\\TodoApp\\client\\src\\screens\\Login.js":"6","D:\\TodoApp\\client\\src\\screens\\Update.js":"7","D:\\TodoApp\\client\\src\\components\\Todo.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1048,"mtime":1607916042257,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1574,"mtime":1607981299654,"results":"13","hashOfConfig":"10"},{"size":1709,"mtime":1607981650930,"results":"14","hashOfConfig":"10"},{"size":1841,"mtime":1607981438397,"results":"15","hashOfConfig":"10"},{"size":1327,"mtime":1608000426167,"results":"16","hashOfConfig":"10"},{"size":3838,"mtime":1608002495458,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"spbxpc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"D:\\TodoApp\\client\\src\\index.js",[],["39","40"],"D:\\TodoApp\\client\\src\\App.js",["41","42","43"],"import logo from \"./logo.svg\"\nimport React, { useContext, useEffect } from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport \"./App.css\"\nimport Register from \"./screens/Register\"\nimport Home from \"./screens/Home\"\nimport Login from \"./screens/Login\"\n\nimport { useState } from \"react\"\nimport Update from \"./screens/Update\"\n\nexport const CredentialsContext = React.createContext()\n\nfunction App() {\n  const credentialsState = useState(null)\n\n  return (\n    <div className='App'>\n      <CredentialsContext.Provider value={credentialsState}>\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/Register'>\n              <Register />\n            </Route>\n            <Route path='/login'>\n              <Login />\n            </Route>\n            <Route path='/update'>\n              <Update />\n            </Route>\n          </Switch>\n        </Router>\n      </CredentialsContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","D:\\TodoApp\\client\\src\\reportWebVitals.js",[],"D:\\TodoApp\\client\\src\\screens\\Register.js",[],"D:\\TodoApp\\client\\src\\screens\\Home.js",["44"],"import React, { useContext, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Todo from \"../components/Todo\"\r\nimport { useHistory } from \"react-router\"\r\nimport { CredentialsContext } from \"../App\"\r\n\r\nconst Home = () => {\r\n  const history = useHistory()\r\n  const [credentials] = useContext(CredentialsContext)\r\n\r\n  const [, setCredentials] = useContext(CredentialsContext)\r\n\r\n  useEffect(() => {\r\n    let data = localStorage.getItem(\"auth\")\r\n    if (data != null && !credentials) {\r\n      const { username, password } = JSON.parse(data)\r\n      fetch(\"http://localhost:4000/user/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      })\r\n        .then(() => {\r\n          setCredentials({\r\n            username: username,\r\n            password: password,\r\n          })\r\n          history.push(\"/\")\r\n        })\r\n\r\n        .catch((error) => {\r\n          localStorage.clear()\r\n        })\r\n    }\r\n  }, [credentials])\r\n  const hanldeLogout = () => {\r\n    localStorage.clear()\r\n    setCredentials(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome {credentials && credentials.username}</h1>\r\n      {!credentials && <Link to='/register'>Register</Link>}\r\n      <br />\r\n      {!credentials && (\r\n        <div>\r\n          <br />\r\n          <Link to='/login'>Login</Link>\r\n        </div>\r\n      )}\r\n\r\n      {credentials && (\r\n        <Link to='/' onClick={hanldeLogout}>\r\n          Logout\r\n        </Link>\r\n      )}\r\n      <br />\r\n      <br />\r\n      {credentials && <Todo />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\TodoApp\\client\\src\\screens\\Login.js",[],"D:\\TodoApp\\client\\src\\screens\\Update.js",["45"],"import React, { useContext, useState } from \"react\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router\"\r\nimport { CredentialsContext } from \"../App\"\r\n\r\nconst Update = () => {\r\n  let { id, text } = useLocation()\r\n  const [todosText, setTodoText] = useState(\"\")\r\n  const [credentials] = useContext(CredentialsContext)\r\n  const history = useHistory()\r\n\r\n  const updateTodo = (e) => {\r\n    e.preventDefault()\r\n    if (todosText.length != 0) {\r\n      fetch(\"http://localhost:4000/todo/updateTodos\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Basic ${credentials.username}:${credentials.password}`,\r\n        },\r\n        body: JSON.stringify({ id, text: todosText }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then(() => history.push(\"/\"))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Previous text</h1>\r\n      <label>{text}</label>\r\n\r\n      <form onSubmit={updateTodo}>\r\n        <input\r\n          value={todosText}\r\n          onChange={(e) => setTodoText(e.target.value)}\r\n          type='text'\r\n        ></input>\r\n        <button type='submit'>Update</button>\r\n      </form>\r\n      <br />\r\n      <Link to='/'>Back</Link>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Update\r\n","D:\\TodoApp\\client\\src\\components\\Todo.js",["46","47","48","49","50"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { CredentialsContext } from \"../App\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodo] = useState([])\r\n  const [todosText, setTodoText] = useState(\"\")\r\n  const [credentials] = useContext(CredentialsContext)\r\n  const [filter, setFilter] = useState(\"uncompleted\")\r\n  const [value, setValue] = useState(0)\r\n\r\n  const persist = (newTodos) => {\r\n    fetch(\"http://localhost:4000/todo/addTodos\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Basic ${credentials.username}:${credentials.password}`,\r\n      },\r\n      body: JSON.stringify(newTodos),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todos) => setTodo(todos))\r\n  }\r\n\r\n  const delTodoById = (id) => {\r\n    fetch(\"http://localhost:4000/todo/deleteTodo\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Basic ${credentials.username}:${credentials.password}`,\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todos) => setTodo(todos))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/todo/getTodos\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Basic ${credentials.username}:${credentials.password}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todos) => setTodo(todos))\r\n  }, [])\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault()\r\n    if (todosText.length != 0) {\r\n      const newTodos = [...todos, { checked: false, text: todosText }]\r\n      persist(newTodos)\r\n      setTodoText(\"\")\r\n    }\r\n  }\r\n  const toggleTodo = (id) => {\r\n    const newTodo = [...todos]\r\n    const todoItem = newTodo.find((todo) => todo._id === id)\r\n    todoItem.checked = !todoItem.checked\r\n    persist(newTodo)\r\n  }\r\n  const getTodos = () => {\r\n    return todos.filter((todo) =>\r\n      filter === \"uncompleted\" ? !todo.checked : todo.checked\r\n    )\r\n  }\r\n  const changeFilter = (newFilter) => {\r\n    setFilter(newFilter)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={(e) => changeFilter(e.target.value)}>\r\n        <option value='uncompleted'>Uncompleted</option>\r\n        <option value='completed'>Completed</option>\r\n      </select>\r\n      <br />\r\n      <br />\r\n\r\n      {getTodos().map((todo) => {\r\n        return (\r\n          <div className='todoBox' key={todo._id}>\r\n            <li className='text'>\r\n              <strong>{todo.text}</strong>\r\n            </li>\r\n\r\n            <input\r\n              className='checkMargin'\r\n              checked={todo.checked}\r\n              onChange={() => toggleTodo(todo._id)}\r\n              type='checkbox'\r\n            />\r\n\r\n            <Link\r\n              className='LinkMarginLeftRight'\r\n              to={{\r\n                pathname: \"/update\",\r\n                id: todo._id,\r\n                text: todo.text,\r\n              }}\r\n            >\r\n              Update\r\n            </Link>\r\n            <Link\r\n              className='LinkMarginLeftRight'\r\n              to='/'\r\n              onClick={(e) => {\r\n                delTodoById(todo._id)\r\n              }}\r\n            >\r\n              Delete\r\n            </Link>\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      {getTodos().length === 0 ? \"*Empty todo list*\" : null}\r\n\r\n      <br />\r\n\r\n      <form onSubmit={addTodo}>\r\n        <input\r\n          value={todosText}\r\n          onChange={(e) => setTodoText(e.target.value)}\r\n          type='text'\r\n          placeholder='Write a todo here'\r\n        ></input>\r\n        <button type='submit'>Add</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":27},{"ruleId":"55","severity":1,"message":"60","line":2,"column":29,"nodeType":"57","messageId":"58","endLine":2,"endColumn":38},{"ruleId":"61","severity":1,"message":"62","line":39,"column":6,"nodeType":"63","endLine":39,"endColumn":19,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":14,"column":26,"nodeType":"67","messageId":"68","endLine":14,"endColumn":28},{"ruleId":"55","severity":1,"message":"69","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":20},{"ruleId":"55","severity":1,"message":"70","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":15},{"ruleId":"55","severity":1,"message":"71","line":11,"column":17,"nodeType":"57","messageId":"58","endLine":11,"endColumn":25},{"ruleId":"61","severity":1,"message":"72","line":49,"column":6,"nodeType":"63","endLine":49,"endColumn":8,"suggestions":"73"},{"ruleId":"65","severity":1,"message":"66","line":53,"column":26,"nodeType":"67","messageId":"68","endLine":53,"endColumn":28},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setCredentials'. Either include them or remove the dependency array.","ArrayExpression",["76"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'credentials.password' and 'credentials.username'. Either include them or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [credentials, history, setCredentials]",{"range":"82","text":"83"},"Update the dependencies array to be: [credentials.password, credentials.username]",{"range":"84","text":"85"},[1092,1105],"[credentials, history, setCredentials]",[1611,1613],"[credentials.password, credentials.username]"]